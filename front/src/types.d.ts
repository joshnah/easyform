// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on

// whether you're running in development or production).
declare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string;
declare const MAIN_WINDOW_VITE_NAME: string;

// Preload types
interface ThemeModeContext {
  toggle: () => Promise<boolean>;
  dark: () => Promise<void>;
  light: () => Promise<void>;
  system: () => Promise<boolean>;
  current: () => Promise<"dark" | "light" | "system">;
}
interface ElectronWindow {
  minimize: () => Promise<void>;
  maximize: () => Promise<void>;
  close: () => Promise<void>;
}
interface HelloWorldContext {
  helloWorld: () => Promise<boolean>;
  createFile: (content: string) => Promise<boolean>;
  runBashScript: () => Promise<string>;
  runBin: () => Promise<string>;
  /**
   * Return the absolute path of the **FIRST** choosen file
   */
  selectFile: () => Promise<string | null>;
  openFile: (path: string) => Promise<string | null>;
  selectDirectory: () => Promise<DirWFilePaths | null>;
}

interface FileContext {
  readFile: (path: string) => Promise<{
    name: string;
    path: string;
    size: number;
    type: string;
    content: string; // Base64-encoded content
  }>;
  writeFile: (path: string, data: string | Buffer) => Promise<{ success: boolean }>;
  readApiKeys: () => Promise<any[]>;
  writeApiKeys: (keys: any[]) => Promise<void>;
}

declare interface Window {
  themeMode: ThemeModeContext;
  electronWindow: ElectronWindow;
  // linked CONTEXT constant in ./helpers/ipc/x/hello/hello-world-context.ts
  helloWorldContext: HelloWorldContext;
  fileContext: FileContext;
}

// custom helpers types
type DirWFilePaths = {
  path: string;
  filePaths: string[];
}
